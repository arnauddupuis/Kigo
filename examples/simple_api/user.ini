# Exemple file

# The list of templates we will use. We can use only specific types from different templates. Not everything will be generated. Templates can use other templates (PHP uses SQL for example).
# This is a semi-colon separatd list. Order is important to, for type expansion the first template of this list is used for example.
templates=PHP

# The list of elements that will be generated. It can be anything from all the including templates (for example, class is from the PHP template and sql_table from the SQL one).
generate=php_class;php_api;sql_table;bork_api

members=tata{k_int};titi{k_string}{property};toto{User}{property};tutu{k_char};tete{k_string};bob{k_int}{property}{primary_key=true auto_increment=true}

# If this class inherits from other classes you have to use one of this forms:
# Simple inheritance :
# class=User:Dad
# Multiple inheritance (if language support it, Kigo does not check on that)
# class=User:Dad;Mom;TheMailman
class=User

# The license parameter can either be a relative path (to the directory of this file), an absolute path or a one line text.
license=./license.txt

fk_prefix=FK
# This will generate the documentation for getTiti() and setTiti() methods. You can use whatever starter you want, for example :
doc:multiply:titi=blah blah
# will generate the documentation for the multiplyTiti() method.
doc:get:titi=Get the titi parameter
doc:set:titi=Set the titi member variable

